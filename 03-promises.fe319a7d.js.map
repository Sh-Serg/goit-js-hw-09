{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,aAC9BC,EAAgB,CACpBC,SAAU,YACVC,SAAU,OACVC,aAAc,OACdC,QAAS,IACTC,cAAc,GAKhB,SAASC,EAAcL,EAAUM,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EACFF,EAAQ,CAAER,WAAUM,UAEpBG,EAAO,CAAET,WAAUM,S,GAEpBA,E,IAXPV,EAAKkB,iBAAiB,UAetB,SAAyBC,GACvBA,EAAEC,iBAMF,IALA,IAAgCC,EAAAF,EAAEG,cAAcC,SAAxCC,EAAwBH,EAAxBX,MAAOe,EAAiBJ,EAAjBI,KAAMC,EAAWL,EAAXK,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEvBG,EAAI,EAAGA,GAAKD,EAAaC,GAAK,EAAG,CAGxCvB,EAAcuB,EAFCL,EAAaG,EAAYE,GAGrCC,MAAK,SAAAC,G,IAAG9B,EAAQ8B,EAAR9B,SAAUM,EAAKwB,EAALxB,MACjBZ,EAAAqC,OAAOC,QACL,qBAAoCC,OAAfjC,EAAS,QAAYiC,OAAN3B,EAAM,MAC1CP,E,IAGHmC,OAAM,SAAAJ,G,IAAG9B,EAAQ8B,EAAR9B,SAAUM,EAAKwB,EAALxB,MAClBZ,EAAAqC,OAAOI,QACL,oBAAmCF,OAAfjC,EAAS,QAAYiC,OAAN3B,EAAM,MACzCP,E,IAGNgB,EAAEG,cAAckB,O","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst form = document.querySelector('form.form');\nconst optionsNotify = {\n  position: 'right-top',\n  distance: '25px',\n  borderRadius: '15px',\n  timeout: 5000,\n  clickToClose: true,\n};\n\nform.addEventListener('submit', onPromiseCreate);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction onPromiseCreate(e) {\n  e.preventDefault();\n  const { delay, step, amount } = e.currentTarget.elements;\n  let inputDelay = Number(delay.value);\n  let inputStep = Number(step.value);\n  let inputAmount = Number(amount.value);\n\n  for (let i = 0; i <= inputAmount; i += 1) {\n    const delays = inputDelay + inputStep * i;\n    // console.log(delays);\n    createPromise(i, delays)\n      .then(({ position, delay }) => {\n        Notify.success(\n          `Fulfilled promise ${position} in ${delay}ms`,\n          optionsNotify\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(\n          `Rejected promise ${position} in ${delay}ms`,\n          optionsNotify\n        );\n      });\n    e.currentTarget.reset();\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$optionsNotify","position","distance","borderRadius","timeout","clickToClose","$ce04d3a99e08e73b$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","e","preventDefault","_elements","currentTarget","elements","delay1","step","amount","inputDelay","Number","value","inputStep","inputAmount","i","then","param","Notify","success","concat","catch","failure","reset"],"version":3,"file":"03-promises.fe319a7d.js.map"}